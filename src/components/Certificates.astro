---
import { siteConfig } from "../config";
const hasCertificates = siteConfig.certificates && siteConfig.certificates.length > 0;

// Get unique certificate types for filter buttons
const certificateTypes = hasCertificates 
  ? [...new Set(siteConfig.certificates.map(cert => cert.type))]
  : [];
---

{
  hasCertificates && (
    <section id="certificates" class="p-8 sm:p-12 md:p-16 lg:p-24 bg-gray-50">
      <div>
        <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-16 items-start">
          <div class="lg:col-span-4">
            <h2 class="text-3xl sm:text-4xl md:text-5xl xl:text-7xl font-bold text-gray-900">
              Certificates
            </h2>
            <div
              class="w-[75px] h-[5px] mt-2 rounded-full"
              style={`background-color: ${siteConfig.accentColor}`}
            />
            <p class="text-gray-600 mt-4 text-lg">
              Professional certifications and recognitions
            </p>
          </div>

          <div class="lg:col-span-8 relative">
            {/* Filter buttons */}
            {certificateTypes.length > 1 && (
              <div class="flex flex-wrap gap-2 mb-6">
                <button
                  data-filter="all"
                  class="filter-btn active px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300 bg-gray-900 text-white"
                >
                  All ({siteConfig.certificates.length})
                </button>
                {certificateTypes.map((type) => {
                  const count = siteConfig.certificates.filter(cert => cert.type === type).length;
                  return (
                    <button
                      data-filter={type.toLowerCase()}
                      class="filter-btn px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300 bg-gray-100 text-gray-700 hover:bg-gray-200"
                    >
                      {type} ({count})
                    </button>
                  );
                })}
              </div>
            )}
            <div class="overflow-x-auto pb-4">
              <div class="flex gap-6 snap-x snap-mandatory scrollbar-hide" style="width: max-content;">
                {siteConfig.certificates.map((certificate, index) => (
                  <div 
                    class="certificate-card group relative bg-white rounded-2xl shadow-sm border border-gray-200 overflow-hidden transition-all duration-300 hover:shadow-xl hover:-translate-y-1 flex-shrink-0 w-80 h-96 snap-start flex flex-col"
                    data-type={certificate.type.toLowerCase()}
                  >
                  {/* Preview Image */}
                  {certificate.previewUrl && (
                    <div class="aspect-[4/3] bg-gray-100 overflow-hidden">
                      <img 
                        src={certificate.previewUrl} 
                        alt={`${certificate.name} preview`}
                        class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                        loading="lazy"
                      />
                    </div>
                  )}
                  
                  <div class="p-6 flex flex-col flex-1">
                    <div class="flex items-center gap-2 mb-2">
                      <span
                        class="px-2 py-1 text-xs font-medium rounded-md"
                        style={`background-color: ${siteConfig.accentColor}20; color: ${siteConfig.accentColor}`}
                      >
                        {certificate.type}
                      </span>
                      <span class="text-sm text-gray-500">{certificate.date}</span>
                    </div>
                    <h3 class="text-lg font-bold text-gray-900 mb-2">
                      {certificate.name}
                    </h3>
                    <p class="text-sm text-gray-600 mb-3 flex-1">
                      {certificate.description}
                    </p>
                    <p class="text-sm font-medium text-gray-700 mb-4">
                      {certificate.issuer}
                    </p>
                    
                    {/* Download Button */}
                    
                    {certificate.fileUrl && (
                      <div class="pt-4 border-t border-gray-100">
                        <a
                          href={certificate.fileUrl}
                          download={`${certificate.name.replace(/\s+/g, '_')}.pdf`}
                          class="inline-flex items-center gap-2 px-4 py-2 bg-gray-900 hover:bg-gray-800 text-white text-sm font-medium rounded-lg transition-all duration-300 hover:shadow-md w-full justify-center"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="16"
                            height="16"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            class="w-4 h-4"
                          >
                            <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                            <polyline points="7,10 12,15 17,10"/>
                            <line x1="12" y1="15" x2="12" y2="3"/>
                          </svg>
                          Download
                        </a>
                      </div>
                    )}
                  </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

<style>
  /* Hide scrollbar for Webkit browsers */
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  
  /* Hide scrollbar for Firefox */
  .scrollbar-hide {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }
  
  /* Smooth scrolling behavior */
  .overflow-x-auto {
    scroll-behavior: smooth;
  }
  
  /* Add some visual indication for scrollability on larger screens */
  @media (min-width: 768px) {
    .overflow-x-auto::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: 20px;
      height: 100%;
      background: linear-gradient(to left, rgba(249, 250, 251, 0.8), transparent);
      pointer-events: none;
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    
    .overflow-x-auto:hover::after {
      opacity: 1;
    }
  }

  /* Filter animation styles */
  .certificate-card {
    opacity: 1;
    transform: translateX(0);
    transition: opacity 0.3s ease, transform 0.3s ease;
  }
  
  .certificate-card.hidden {
    display: none;
  }
  
  /* Ensure proper scrolling */
  .overflow-x-auto {
    scrollbar-width: thin;
    scrollbar-color: rgba(0, 0, 0, 0.2) transparent;
  }
  
  .overflow-x-auto::-webkit-scrollbar {
    height: 6px;
  }
  
  .overflow-x-auto::-webkit-scrollbar-track {
    background: transparent;
  }
  
  .overflow-x-auto::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.2);
    border-radius: 3px;
  }
  
  .overflow-x-auto::-webkit-scrollbar-thumb:hover {
    background-color: rgba(0, 0, 0, 0.3);
  }
  
  .filter-btn.active {
    background-color: var(--accent-color, #512BD4) !important;
    color: white !important;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const certificateCards = document.querySelectorAll('.certificate-card');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const filterType = this.getAttribute('data-filter');
        
        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');
        
        // Filter certificates
        certificateCards.forEach(card => {
          const cardType = card.getAttribute('data-type');
          
          if (filterType === 'all' || cardType === filterType) {
            card.classList.remove('hidden');
          } else {
            card.classList.add('hidden');
          }
        });
      });
    });
  });
</script>